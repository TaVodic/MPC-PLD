KCPSM6 Assembler log file for program 'C:\Temp\240703\PLD\PC_10_template_2025\SOURCES\kcpsm6\Assembler\prog_ROM.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 17 Apr 2025
Assembly timestamp: 10:48:31

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: FFF hex
Nominal program memory size: 4K (4096)   address(11:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 67
Memory locations available: 4029


Assembly listing

 Addr Code                Instruction

 000                      ;==============================================================================;
 000                      ;
 000                      ; Michal Kubicek (michal.kubicek@email.cz)
 000                      ;
 000                      ;==============================================================================;
 000                      ;   __  __       _
 000                      ;  |  \/  |     (_)
 000                      ;  | \  / | __ _ _ _ __
 000                      ;  | |\/| |/ _' | | '_ \
 000                      ;  | |  | | (_| | | | | |
 000                      ;  |_|  |_|\__,_|_|_| |_|
 000                      ;
 000                      ;
 000                      ;
 000                      ;==============================================================================;
 000                      ; Startup and workaround for "Vivado Hardware Manager" problem
 000                      ;==============================================================================;
 000                      ;
 000  22004               JUMP 004[cold_start]         ; Avoid address 003 on start up
 001  22004               JUMP 004[cold_start]
 002  22004               JUMP 004[cold_start]
 003  22004               JUMP 004[cold_start]         ; Address 003
 004                      ;
 004          cold_start: ; simple 7-segment display text
 004  0100D               LOAD s0, 0D
 005  2D003               OUTPUT s0, 03[ID_7SEG_DIG_1]
 006  0100E               LOAD s0, 0E
 007  2D004               OUTPUT s0, 04[ID_7SEG_DIG_2]
 008  0100A               LOAD s0, 0A
 009  2D005               OUTPUT s0, 05[ID_7SEG_DIG_3]
 00A  0100D               LOAD s0, 0D
 00B  2D006               OUTPUT s0, 06[ID_7SEG_DIG_4]
 00C  01000               LOAD s0, 00
 00D                      ;
 00D                      ;
 00D                      ;
 00D                      ;==============================================================================;
 00D                      ; Main program loop
 00D                      ;==============================================================================;
 00D                      ;
 00D           main_loop: 
 00D                      ;
 00D                      ; read status of buttons and switches and forward it to LEDs
 00D                      ;INPUT   s0, ID_BTN                  ; read state of buttons
 00D                      ;SL0     s0                          ; 4x shift left
 00D                      ;SL0     s0
 00D                      ;SL0     s0
 00D                      ;SL0     s0
 00D                      ;INPUT   s1, ID_SW                   ; read state of switches
 00D                      ;OR      s1, s0                      ; merge 4 BTN and 4 SW to one byte (s1)
 00D                      ;OUTPUT  s1, ID_LED                  ; lit LED on/off according to SW and BTN
 00D  09200               INPUT s2, 00[ID_BTN]
 00E  1D201               COMPARE s2, 01
 00F  36012               JUMP NZ, 012[check]
 010  01100               LOAD s1, 00
 011  2200D               JUMP 00D[main_loop]
 012               check: 
 012  1D101               COMPARE s1, 01
 013  3200D               JUMP Z, 00D[main_loop]
 014  22015               JUMP 015[send]
 015                send: 
 015  09019               INPUT s0, 19[ID_TX_BUSY]
 016  1D001               COMPARE s0, 01
 017  32015               JUMP Z, 015[send]
 018  01031               LOAD s0, 31
 019  2D017               OUTPUT s0, 17[ID_UART_DATA]
 01A  01001               LOAD s0, 01
 01B  2D018               OUTPUT s0, 18[ID_TX_START]
 01C  01000               LOAD s0, 00
 01D  2D018               OUTPUT s0, 18[ID_TX_START]
 01E  20021               CALL 021[wait_1s]
 01F  01101               LOAD s1, 01
 020  2200D               JUMP 00D[main_loop]
 021                      ;
 021                      ;
 021                      ;
 021                      ; if TXBUSY = 0 {DATA_IN = DATA; TX_START = 1; DELAY, TX_START = 0}
 021                      ;
 021                      ;==============================================================================;
 021                      ; Include other source files
 021                      ;==============================================================================;
 021                      ;
 021                      INCLUDE "C:\Temp\240703\PLD\PC_10_template_2025\SOURCES\kcpsm6\Assembler\prog_ROM_addr.psm"["prog_ROM_addr.psm"]
 021                      ;==============================================================================;
 021                      ;
 021                      ; Michal Kubicek (michal.kubicek@email.cz)
 021                      ;
 021                      ;==============================================================================;
 021                      ;               _     _
 021                      ;      /\      | |   | |
 021                      ;     /  \   __| | __| |_ __ ___  ___ ___   ___ _ __   __ _  ___ ___
 021                      ;    / /\ \ / _' |/ _' | '__/ _ \/ __/ __| / __| '_ \ / _' |/ __/ _ \
 021                      ;   / ____ \ (_| | (_| | | |  __/\__ \__ \ \__ \ |_) | (_| | (_|  __/
 021                      ;  /_/    \_\__,_|\__,_|_|  \___||___/___/ |___/ .__/ \__,_|\___\___|
 021                      ;                                              | |
 021                      ;                                              |_|
 021                      ;
 021                      ;==============================================================================;
 021                      ;
 021                      CONSTANT ID_BTN, 00
 021                      CONSTANT ID_SW, 01
 021                      CONSTANT ID_LED, 02
 021                      CONSTANT ID_7SEG_DIG_1, 03
 021                      CONSTANT ID_7SEG_DIG_2, 04
 021                      CONSTANT ID_7SEG_DIG_3, 05
 021                      CONSTANT ID_7SEG_DIG_4, 06
 021                      CONSTANT ID_7SEG_DP, 07
 021                      CONSTANT ID_7SEG_DOTS, 08
 021                      CONSTANT ID_PWM_REF_7, 09
 021                      CONSTANT ID_PWM_REF_6, 10
 021                      CONSTANT ID_PWM_REF_5, 11
 021                      CONSTANT ID_PWM_REF_4, 12
 021                      CONSTANT ID_PWM_REF_3, 13
 021                      CONSTANT ID_PWM_REF_2, 14
 021                      CONSTANT ID_PWM_REF_1, 15
 021                      CONSTANT ID_PWM_REF_0, 16
 021                      CONSTANT ID_UART_DATA, 17
 021                      CONSTANT ID_TX_START, 18
 021                      CONSTANT ID_TX_BUSY, 19
 021                      ;
 021                      ;
 021                      ;==============================================================================;
 021                      INCLUDE "C:\Temp\240703\PLD\PC_10_template_2025\SOURCES\kcpsm6\Assembler\prog_ROM_delay.psm"["prog_ROM_delay.psm"]
 021                      ;==============================================================================;
 021                      ;
 021                      ; Michal Kubicek (michal.kubicek@email.cz)
 021                      ;
 021                      ;==============================================================================;
 021                      ;  __          __   _ _                                  _
 021                      ;  \ \        / /  (_) |                                | |
 021                      ;   \ \  /\  / /_ _ _| |_   _ __  _ __ ___   ___ ___  __| |_   _ _ __ ___  ___
 021                      ;    \ \/  \/ / _' | | __| | '_ \| '__/ _ \ / __/ _ \/ _' | | | | '__/ _ \/ __|
 021                      ;     \  /\  / (_| | | |_  | |_) | | | (_) | (_|  __/ (_| | |_| | | |  __/\__ \
 021                      ;      \/  \/ \__,_|_|\__| | .__/|_|  \___/ \___\___|\__,_|\__,_|_|  \___||___/
 021                      ;                          | |
 021                      ;                          |_|
 021                      ;
 021                      ;==============================================================================;
 021                      ; Blocking wait procedures (times valid for 50 MHz clock)
 021                      ;==============================================================================;
 021                      ;
 021  0100D      wait_1s: LOAD s0, 0D
 022  0115E               LOAD s1, 5E
 023  01260               LOAD s2, 60
 024  22039               JUMP 039[wait_common]
 025                      ;
 025  01065   wait_100ms: LOAD s0, 65
 026  01189               LOAD s1, 89
 027  0120A               LOAD s2, 0A
 028  22039               JUMP 039[wait_common]
 029                      ;
 029  01021    wait_10ms: LOAD s0, 21
 02A  011F4               LOAD s1, F4
 02B  01201               LOAD s2, 01
 02C  22039               JUMP 039[wait_common]
 02D                      ;
 02D  01067     wait_1ms: LOAD s0, 67
 02E  01118               LOAD s1, 18
 02F  01201               LOAD s2, 01
 030  22039               JUMP 039[wait_common]
 031                      ;
 031  0106E   wait_100us: LOAD s0, 6E
 032  01102               LOAD s1, 02
 033  01201               LOAD s2, 01
 034  22039               JUMP 039[wait_common]
 035                      ;
 035  0103C    wait_10us: LOAD s0, 3C
 036  01100               LOAD s1, 00
 037  01201               LOAD s2, 01
 038  22039               JUMP 039[wait_common]
 039                      ;
 039  19001  wait_common: SUB s0, 01
 03A  1B100               SUBCY s1, 00
 03B  1B200               SUBCY s2, 00
 03C  36039               JUMP NZ, 039[wait_common]
 03D  25000               RETURN 
 03E                      ;
 03E                      ;==============================================================================;
 03E                      INCLUDE "C:\Temp\240703\PLD\PC_10_template_2025\SOURCES\kcpsm6\Assembler\prog_ROM_IRQ.psm"["prog_ROM_IRQ.psm"]
 03E                      ;==============================================================================;
 03E                      ;
 03E                      ; Michal Kubicek (michal.kubicek@email.cz)
 03E                      ;
 03E                      ;==============================================================================;
 03E                      ;  _____       _                             _
 03E                      ; |_   _|     | |                           | |
 03E                      ;   | |  _ __ | |_ ___ _ __ _ __ _   _ _ __ | |_
 03E                      ;   | | | '_ \| __/ _ \ '__| '__| | | | '_ \| __|
 03E                      ;  _| |_| | | | ||  __/ |  | |  | |_| | |_) | |_
 03E                      ; |_____|_| |_|\__\___|_|  |_|   \__,_| .__/ \__|
 03E                      ;                                     | |
 03E                      ;                                     |_|
 03E                      ;
 03E                      ;==============================================================================;
 03E                      ;
 03E                      ; register backup
 03E  37001   IntService: REGBANK B
 03F                      ;
 03F                      ;==============================================================================;
 03F                      ;
 03F  0D000               TEST s0, 00                  ; dummy
 040                      ;
 040                      ;
 040                      ;
 040                      ;==============================================================================;
 040                      ;
 040                      ; register backup
 040  37000      Int_End: REGBANK A
 041  29001               RETURNI ENABLE               ; Return from interrupt subroutine, enable interrupt
 042                      ;
 042                      ;==============================================================================;
 042                      ;
 042                      ;
 042                      ;==============================================================================;
 042                      ; Interrupt jump instruction
 042                      ;==============================================================================;
 042                      ;
 FFF                      ADDRESS FFF                  ; interrupt
 FFF  2203E               JUMP 03E[IntService]         ; jump to interrupt subroutine address
 FFF                      ;
 FFF                      ;==============================================================================;


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Temp\240703\PLD\PC_10_template_2025\SOURCES\kcpsm6\Assembler\prog_ROM.psm
C:\Temp\240703\PLD\PC_10_template_2025\SOURCES\kcpsm6\Assembler\prog_ROM_addr.psm
C:\Temp\240703\PLD\PC_10_template_2025\SOURCES\kcpsm6\Assembler\prog_ROM_delay.psm
C:\Temp\240703\PLD\PC_10_template_2025\SOURCES\kcpsm6\Assembler\prog_ROM_IRQ.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   10'd         
 timestamp_minutes 48'd         
 timestamp_seconds 31'd         
 datestamp_year    25'd         
 datestamp_month   4'd          
 datestamp_day     17'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 ID_BTN            00           prog_ROM_addr.psm
 ID_SW             01           prog_ROM_addr.psm
 ID_LED            02           prog_ROM_addr.psm
 ID_7SEG_DIG_1     03           prog_ROM_addr.psm
 ID_7SEG_DIG_2     04           prog_ROM_addr.psm
 ID_7SEG_DIG_3     05           prog_ROM_addr.psm
 ID_7SEG_DIG_4     06           prog_ROM_addr.psm
 ID_7SEG_DP        07           prog_ROM_addr.psm
 ID_7SEG_DOTS      08           prog_ROM_addr.psm
 ID_PWM_REF_7      09           prog_ROM_addr.psm
 ID_PWM_REF_6      10           prog_ROM_addr.psm
 ID_PWM_REF_5      11           prog_ROM_addr.psm
 ID_PWM_REF_4      12           prog_ROM_addr.psm
 ID_PWM_REF_3      13           prog_ROM_addr.psm
 ID_PWM_REF_2      14           prog_ROM_addr.psm
 ID_PWM_REF_1      15           prog_ROM_addr.psm
 ID_PWM_REF_0      16           prog_ROM_addr.psm
 ID_UART_DATA      17           prog_ROM_addr.psm
 ID_TX_START       18           prog_ROM_addr.psm
 ID_TX_BUSY        19           prog_ROM_addr.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "17 Apr 2025"  
 timestamp$        "10:48:31"     



List of line labels

   Label         Addr  Source PSM File

   cold_start    004   prog_ROM.psm
   main_loop     00D   prog_ROM.psm
   check         012   prog_ROM.psm
   send          015   prog_ROM.psm
   wait_1s       021   prog_ROM_delay.psm
 * wait_100ms    025   prog_ROM_delay.psm
 * wait_10ms     029   prog_ROM_delay.psm
 * wait_1ms      02D   prog_ROM_delay.psm
 * wait_100us    031   prog_ROM_delay.psm
 * wait_10us     035   prog_ROM_delay.psm
   wait_common   039   prog_ROM_delay.psm
   IntService    03E   prog_ROM_IRQ.psm
 * Int_End       040   prog_ROM_IRQ.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             28
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD               -
 ADDCY             -
 SUB               1
 SUBCY             2

 TEST              1
 TESTCY            -
 COMPARE           3
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           2

 INPUT             2
 OUTPUT            7
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            -
 RETURNI           1

 JUMP             18
 JUMP@             -
 CALL              1
 CALL@             -
 RETURN            1
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
